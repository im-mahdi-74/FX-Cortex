version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 # <-- FIX: Corrected typo from ZOOKeeper
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 15s
      timeout: 10s
      retries: 10

  debezium:
    image: debezium/connect:2.6
    container_name: debezium
    ports:
      - "8083:8083"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      BOOTSTRAP_SERVERS: 'kafka:9092'
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses

  db:
    image: debezium/postgres:15
    container_name: trader_analyser_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER} # <-- FIX: Corrected typo from POSTG-RES_USER
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    image: redis:7.2-alpine
    container_name: redis_cache
    ports:
      - "6380:6379"

  clickhouse:
    image: clickhouse/clickhouse-server:24.5
    container_name: clickhouse_db
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse/
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD-SHELL", "clickhouse-client --query 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      tags:
        - "hist_analyser/app:latest"
    container_name: trader_analyser_app
    command: tail -f /dev/null
    volumes:
      - ./:/app

  scheduler:
    image: hist_analyser/app:latest
    container_name: trader_analyser_scheduler
    command: >
      /bin/sh -c "cp /app/crontab /etc/cron.d/scheduler-cron && chmod 0644 /etc/cron.d/scheduler-cron && crontab /etc/cron.d/scheduler-cron && cron -f"
    volumes:
      - ./:/app

  analyzer:
    image: hist_analyser/app:latest
    container_name: trader_analyser_analyzer
    command: python src/analysis/stream_analyzer.py
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_started
      clickhouse:
        condition: service_healthy
    volumes:
      - ./:/app
    environment:
      KAFKA_BROKER: kafka:9092
      REDIS_HOST: redis
      CLICKHOUSE_HOST: clickhouse

volumes:
  postgres_data:
  clickhouse_data:
